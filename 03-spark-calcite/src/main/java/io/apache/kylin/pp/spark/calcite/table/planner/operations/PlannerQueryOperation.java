package io.apache.kylin.pp.spark.calcite.table.planner.operations;

import io.apache.kylin.api.table.operations.Operation;
import io.apache.kylin.api.table.operations.OperationUtils;
import io.apache.kylin.api.table.operations.QueryOperation;
import io.apache.kylin.api.table.operations.QueryOperationVisitor;
import org.apache.calcite.rel.RelNode;

import java.util.Collections;
import java.util.List;

/** Wrapper for valid calcite logical plans generated by Planner. */
public class PlannerQueryOperation implements QueryOperation {
    private final RelNode calciteTree;

    public PlannerQueryOperation(RelNode calciteTree) {
        this.calciteTree = calciteTree;
    }

    public RelNode getCalciteTree() {
        return calciteTree;
    }

    @Override
    public String asSummaryString() {
        return OperationUtils.formatWithChildren(
                "PlannerNode", Collections.emptyMap(), getChildren(), Operation::asSummaryString);
    }

    @Override
    public List<QueryOperation> getChildren() {
        return Collections.emptyList();
    }

    @Override
    public <T> T accept(QueryOperationVisitor<T> visitor) {
        return visitor.visit(this);
    }
}
